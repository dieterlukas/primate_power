# We remove species with no data from the tree
mtree<-missing$phy
# We calculate the pair-wise phylogenetic distances among the species in the tree; this gives a matrix where values are the total branch length needed to connect two species (diagonal is the distance of a species to itself so zero)
Dmat<-cophenetic(mtree)
dat_list_continuous_phylogenetic <- list(
N_spp = nrow(dstan_strict),
R = as.factor(dstan_strict$strictfdom),
females = standardize(dstan_strict$females),
arboreal = as.integer(dstan_strict$Strata_Wilman=="Ar"),
species = as.integer(as.factor(dstan_strict$corrected_species_id)),
total = rep(100,nrow(dstan_strict))
)
dat_list_continuous_phylogenetic$Dmat<-Dmat[ unique(dstan_strict$corrected_species_id),unique(dstan_strict$corrected_species_id) ]/max(Dmat)
colnames(dat_list_continuous_phylogenetic$Dmat)<-as.integer(as.factor(colnames(dat_list_continuous_phylogenetic$Dmat)))
rownames(dat_list_continuous_phylogenetic$Dmat)<-as.integer(as.factor(rownames(dat_list_continuous_phylogenetic$Dmat)))
dat_list_continuous_phylogenetic$N_spp<-length(unique(dstan_strict$corrected_species_id))
m_strict_continuous_phylogenetic <- ulam(
alist(
R ~ dordlogit( phi , cutpoints ),
phi <- k[species] +b*females+c*arboreal,
vector[N_spp]:k ~ multi_normal( 0 , SIGMA ),
matrix[N_spp,N_spp]: SIGMA <- cov_GPL2( Dmat, etasq, rhosq, 0.01),
b ~ dnorm(0,1),
c~dnorm(0,1),
cutpoints ~ dnorm( 0 , 1.5 ),
etasq~exponential(1),
rhosq~exponential(1)
) , data=dat_list_continuous_phylogenetic , chains=4 , cores=4 ,cmdstan=T, messages=FALSE, refresh=0)
precis(m_strict_continuous_phylogenetic)
dstan_strict <- combined[ complete.cases(combined$strictfdom,combined$females,combined$SexualDimorphism_MaleWeight_over_FemaleWeight,combined$corrected_species_id),]
spp_obs<-unique(dstan_strict$corrected_species_id)
spp_obs<-matrix(nrow=length(spp_obs))
rownames(spp_obs)<-unique(dstan_strict$corrected_species_id)
# We match the species in the dataset to the species in the phylogenetic tree
missing<-treedata(inputtree,data=spp_obs,warnings=FALSE)
# We remove species with no data from the tree
mtree<-missing$phy
# We calculate the pair-wise phylogenetic distances among the species in the tree; this gives a matrix where values are the total branch length needed to connect two species (diagonal is the distance of a species to itself so zero)
Dmat<-cophenetic(mtree)
dat_list_continuous_phylogenetic <- list(
N_spp = nrow(dstan_strict),
R = as.factor(dstan_strict$strictfdom),
females = standardize(dstan_strict$females),
SexualDimorphism_MaleWeight_over_FemaleWeight = standardize(dstan_strict$SexualDimorphism_MaleWeight_over_FemaleWeight),
species = as.integer(as.factor(dstan_strict$corrected_species_id)),
total = rep(100,nrow(dstan_strict))
)
dat_list_continuous_phylogenetic$Dmat<-Dmat[ unique(dstan_strict$corrected_species_id),unique(dstan_strict$corrected_species_id) ]/max(Dmat)
colnames(dat_list_continuous_phylogenetic$Dmat)<-as.integer(as.factor(colnames(dat_list_continuous_phylogenetic$Dmat)))
rownames(dat_list_continuous_phylogenetic$Dmat)<-as.integer(as.factor(rownames(dat_list_continuous_phylogenetic$Dmat)))
dat_list_continuous_phylogenetic$N_spp<-length(unique(dstan_strict$corrected_species_id))
m_strict_continuous_phylogenetic <- ulam(
alist(
R ~ dordlogit( phi , cutpoints ),
phi <- k[species] +b*females+c*SexualDimorphism_MaleWeight_over_FemaleWeight,
vector[N_spp]:k ~ multi_normal( 0 , SIGMA ),
matrix[N_spp,N_spp]: SIGMA <- cov_GPL2( Dmat, etasq, rhosq, 0.01),
b ~ dnorm(0,1),
c~dnorm(0,1),
cutpoints ~ dnorm( 0 , 1.5 ),
etasq~exponential(1),
rhosq~exponential(1)
) , data=dat_list_continuous_phylogenetic , chains=4 , cores=4 ,cmdstan=T, messages=FALSE, refresh=0)
precis(m_strict_continuous_phylogenetic)
dstan_strict %>% group_by(corrected_species_id) %>% summarise(mean(females))
average_females<-data.frame(dstan_strict %>% group_by(corrected_species_id) %>% summarise(mean(females)))
dstan_strict<-left_join(dstan_strict,average_females,by="corrected_species_id")
head(dstan_strict)
dstan_strict$female_offset<-dstan_strict$females-dstan_strict$mean.females.
spp_obs<-unique(dstan_strict$corrected_species_id)
spp_obs<-matrix(nrow=length(spp_obs))
rownames(spp_obs)<-unique(dstan_strict$corrected_species_id)
# We match the species in the dataset to the species in the phylogenetic tree
missing<-treedata(inputtree,data=spp_obs,warnings=FALSE)
# We remove species with no data from the tree
mtree<-missing$phy
# We calculate the pair-wise phylogenetic distances among the species in the tree; this gives a matrix where values are the total branch length needed to connect two species (diagonal is the distance of a species to itself so zero)
Dmat<-cophenetic(mtree)
dat_list_continuous_phylogenetic <- list(
N_spp = nrow(dstan_strict),
R = as.factor(dstan_strict$strictfdom),
femaleaverage = standardize(dstan_strict$mean.females.),
femaleoffset = standardize(dstan_strict$female_offset),
SexualDimorphism_MaleWeight_over_FemaleWeight = standardize(dstan_strict$SexualDimorphism_MaleWeight_over_FemaleWeight),
species = as.integer(as.factor(dstan_strict$corrected_species_id)),
total = rep(100,nrow(dstan_strict))
)
dat_list_continuous_phylogenetic$Dmat<-Dmat[ unique(dstan_strict$corrected_species_id),unique(dstan_strict$corrected_species_id) ]/max(Dmat)
colnames(dat_list_continuous_phylogenetic$Dmat)<-as.integer(as.factor(colnames(dat_list_continuous_phylogenetic$Dmat)))
rownames(dat_list_continuous_phylogenetic$Dmat)<-as.integer(as.factor(rownames(dat_list_continuous_phylogenetic$Dmat)))
dat_list_continuous_phylogenetic$N_spp<-length(unique(dstan_strict$corrected_species_id))
m_strict_continuous_phylogenetic <- ulam(
alist(
R ~ dordlogit( phi , cutpoints ),
phi <- k[species]+a*femaleoffset +b*femaleaverage+c*SexualDimorphism_MaleWeight_over_FemaleWeight,
vector[N_spp]:k ~ multi_normal( 0 , SIGMA ),
matrix[N_spp,N_spp]: SIGMA <- cov_GPL2( Dmat, etasq, rhosq, 0.01),
a ~ dnorm(0,1),
b ~ dnorm(0,1),
c~dnorm(0,1),
cutpoints ~ dnorm( 0 , 1.5 ),
etasq~exponential(1),
rhosq~exponential(1)
) , data=dat_list_continuous_phylogenetic , chains=4 , cores=4 ,cmdstan=T, messages=FALSE, refresh=0)
precis(m_strict_continuous_phylogenetic)
boxplot(dstan_strict$mean.females.~dstan_strict$strictfdom)
boxplot(dstan_strict$SexualDimorphism_MaleWeight_over_FemaleWeight~dstan_strict$strictfdom)
plot(dstan_strict$perc_won_females~dstan_strict$SexualDimorphism_MaleWeight_over_FemaleWeight,cex=(dstan_strict$mean.females.+0.01) )
plot(dstan_strict$perc_won_females~dstan_strict$SexualDimorphism_MaleWeight_over_FemaleWeight,cex=(dstan_strict$females+0.01) )
plot(dstan_strict$perc_won_females~dstan_strict$SexualDimorphism_MaleWeight_over_FemaleWeight,cex=(dstan_strict$females+0.01) ,xlab="Sexual dimorphism in body weight",ylab="Percentage fights won by females")
legend(x="topright",legend=c("Circle size = number of females"),pch=c(1),bty="n")
plot(dstan_strict$perc_won_females~dstan_strict$SexualDimorphism_MaleWeight_over_FemaleWeight,cex=(dstan_strict$females+0.01) ,xlab="Sexual dimorphism in body weight",ylab="Percentage fights won by females")
legend(x="topright",legend=c("Circle size = number of females"),pch=c(1),bty="n")3
plot(dstan_strict$perc_won_females~dstan_strict$SexualDimorphism_MaleWeight_over_FemaleWeight,cex=(dstan_strict$females+0.01) ,xlab="Sexual dimorphism in body weight",ylab="Percentage fights won by females")
legend(x="topright",legend=c("Circle size = number of females"),pch=c(1),bty="n")
plot(dstan_strict$perc_won_females~dstan_strict$SexualDimorphism_MaleWeight_over_FemaleWeight,cex=(dstan_strict$females+0.01) ,xlab="Sexual dimorphism in body weight",ylab="Percentage fights won by females")
legend(x="topright",legend=c("Circle size = number of females"),pch=c(1))
plot(dstan_strict$perc_won_females~exp(dstan_strict$SexualDimorphism_MaleWeight_over_FemaleWeight),cex=(dstan_strict$females+0.01) ,xlab="Sexual dimorphism in body weight",ylab="Percentage fights won by females")
legend(x="topright",legend=c("Circle size = number of females"),pch=c(1))
dstan_strict <- combined[ complete.cases(combined$strictfdom,combined$females,combined$CanineDimorphism,combined$corrected_species_id),]
spp_obs<-unique(dstan_strict$corrected_species_id)
spp_obs<-matrix(nrow=length(spp_obs))
rownames(spp_obs)<-unique(dstan_strict$corrected_species_id)
# We match the species in the dataset to the species in the phylogenetic tree
missing<-treedata(inputtree,data=spp_obs,warnings=FALSE)
# We remove species with no data from the tree
mtree<-missing$phy
# We calculate the pair-wise phylogenetic distances among the species in the tree; this gives a matrix where values are the total branch length needed to connect two species (diagonal is the distance of a species to itself so zero)
Dmat<-cophenetic(mtree)
dat_list_continuous_phylogenetic <- list(
N_spp = nrow(dstan_strict),
R = as.factor(dstan_strict$strictfdom),
females = standardize(dstan_strict$females),
CanineDimorphism = standardize(dstan_strict$CanineDimorphism),
species = as.integer(as.factor(dstan_strict$corrected_species_id)),
total = rep(100,nrow(dstan_strict))
)
dat_list_continuous_phylogenetic$Dmat<-Dmat[ unique(dstan_strict$corrected_species_id),unique(dstan_strict$corrected_species_id) ]/max(Dmat)
colnames(dat_list_continuous_phylogenetic$Dmat)<-as.integer(as.factor(colnames(dat_list_continuous_phylogenetic$Dmat)))
rownames(dat_list_continuous_phylogenetic$Dmat)<-as.integer(as.factor(rownames(dat_list_continuous_phylogenetic$Dmat)))
dat_list_continuous_phylogenetic$N_spp<-length(unique(dstan_strict$corrected_species_id))
m_strict_continuous_phylogenetic <- ulam(
alist(
R ~ dordlogit( phi , cutpoints ),
phi <- k[species] +b*females+c*CanineDimorphism,
vector[N_spp]:k ~ multi_normal( 0 , SIGMA ),
matrix[N_spp,N_spp]: SIGMA <- cov_GPL2( Dmat, etasq, rhosq, 0.01),
b ~ dnorm(0,1),
c~dnorm(0,1),
cutpoints ~ dnorm( 0 , 1.5 ),
etasq~exponential(1),
rhosq~exponential(1)
) , data=dat_list_continuous_phylogenetic , chains=4 , cores=4 ,cmdstan=T, messages=FALSE, refresh=0)
precis(m_strict_continuous_phylogenetic)
boxplot(combined$CanineDimorphism~combined$Strata_Wilman)
boxplot(exp(combined$CanineDimorphism)~combined$Strata_Wilman)
plot(dens(combined[combined$Strata_Wilman=="Ar",]$CanineDimorphism))
lines(dens(combined[combined$Strata_Wilman=="G",]$CanineDimorphism))
lines(dens(combined[combined$Strata_Wilman=="Ar",]$CanineDimorphism),add=T)
dstan_continuous <- combined[ complete.cases(combined$CanineDimorphism,combined$females,combined$Strata_Wilman,combined$corrected_species_id),]
spp_obs<-unique(dstan_continuous$corrected_species_id)
spp_obs<-matrix(nrow=length(spp_obs))
rownames(spp_obs)<-unique(dstan_continuous$corrected_species_id)
# We match the species in the dataset to the species in the phylogenetic tree
missing<-treedata(inputtree,data=spp_obs,warnings=FALSE)
# We remove species with no data from the tree
mtree<-missing$phy
# We calculate the pair-wise phylogenetic distances among the species in the tree; this gives a matrix where values are the total branch length needed to connect two species (diagonal is the distance of a species to itself so zero)
Dmat<-cophenetic(mtree)
dat_list_continuous_phylogenetic <- list(
N_spp=nrow(dstan_continuous),
caninessd = standardize((dstan_continuous$CanineDimorphism)),
body_mass = standardize(log(dstan_continuous$females)),
arboreal = as.integer(dstan_continuous$Strata_Wilman=="Ar"),
species = as.integer(as.factor(dstan_continuous$corrected_species_id))
)
newDmat<-(matrix(ncol=nrow(dstan_continuous),nrow=nrow(dstan_continuous)))
colnames(newDmat)<-dstan_continuous$corrected_species_id
rownames(newDmat)<-dstan_continuous$corrected_species_id
for(i in 1:nrow(newDmat)){
for(j in 1:ncol(newDmat)){
newDmat[i,j]<-Dmat[ rownames(Dmat)==rownames(newDmat)[i],colnames(Dmat)==colnames(newDmat)[j] ]
}
}
dat_list_continuous_phylogenetic$Dmat<-newDmat/max(newDmat)
m_continuous_continuous_phylogenetic <- ulam(
alist(
caninessd ~ multi_normal(mu,SIGMA),
mu <- a + b*females + c*arboreal,
matrix[N_spp,N_spp]: SIGMA <- cov_GPL1( Dmat, etasq, rhosq, 0.01),
## adaptive priors
a~normal(0,1),
b~normal(0,1),
c~normal(0,1),
etasq~half_normal(1,0.25),
rhosq~half_normal(3,0.25)
) , data=dat_list_continuous_phylogenetic , chains=4 , cores=4 , cmdstan=T)
dstan_continuous <- combined[ complete.cases(combined$CanineDimorphism,combined$females,combined$Strata_Wilman,combined$corrected_species_id),]
spp_obs<-unique(dstan_continuous$corrected_species_id)
spp_obs<-matrix(nrow=length(spp_obs))
rownames(spp_obs)<-unique(dstan_continuous$corrected_species_id)
# We match the species in the dataset to the species in the phylogenetic tree
missing<-treedata(inputtree,data=spp_obs,warnings=FALSE)
# We remove species with no data from the tree
mtree<-missing$phy
# We calculate the pair-wise phylogenetic distances among the species in the tree; this gives a matrix where values are the total branch length needed to connect two species (diagonal is the distance of a species to itself so zero)
Dmat<-cophenetic(mtree)
dat_list_continuous_phylogenetic <- list(
N_spp=nrow(dstan_continuous),
caninessd = standardize((dstan_continuous$CanineDimorphism)),
females = standardize(log(dstan_continuous$females)),
arboreal = as.integer(dstan_continuous$Strata_Wilman=="Ar"),
species = as.integer(as.factor(dstan_continuous$corrected_species_id))
)
newDmat<-(matrix(ncol=nrow(dstan_continuous),nrow=nrow(dstan_continuous)))
colnames(newDmat)<-dstan_continuous$corrected_species_id
rownames(newDmat)<-dstan_continuous$corrected_species_id
for(i in 1:nrow(newDmat)){
for(j in 1:ncol(newDmat)){
newDmat[i,j]<-Dmat[ rownames(Dmat)==rownames(newDmat)[i],colnames(Dmat)==colnames(newDmat)[j] ]
}
}
dat_list_continuous_phylogenetic$Dmat<-newDmat/max(newDmat)
m_continuous_continuous_phylogenetic <- ulam(
alist(
caninessd ~ multi_normal(mu,SIGMA),
mu <- a + b*females + c*arboreal,
matrix[N_spp,N_spp]: SIGMA <- cov_GPL1( Dmat, etasq, rhosq, 0.01),
## adaptive priors
a~normal(0,1),
b~normal(0,1),
c~normal(0,1),
etasq~half_normal(1,0.25),
rhosq~half_normal(3,0.25)
) , data=dat_list_continuous_phylogenetic , chains=4 , cores=4 , cmdstan=T)
dstan_continuous <- combined[ complete.cases(combined$CanineDimorphism,combined$females,combined$Strata_Wilman,combined$corrected_species_id),]
spp_obs<-unique(dstan_continuous$corrected_species_id)
spp_obs<-matrix(nrow=length(spp_obs))
rownames(spp_obs)<-unique(dstan_continuous$corrected_species_id)
# We match the species in the dataset to the species in the phylogenetic tree
missing<-treedata(inputtree,data=spp_obs,warnings=FALSE)
# We remove species with no data from the tree
mtree<-missing$phy
# We calculate the pair-wise phylogenetic distances among the species in the tree; this gives a matrix where values are the total branch length needed to connect two species (diagonal is the distance of a species to itself so zero)
Dmat<-cophenetic(mtree)
dat_list_continuous_phylogenetic <- list(
N_spp=nrow(dstan_continuous),
caninessd = standardize((dstan_continuous$CanineDimorphism)),
females = standardize(log(dstan_continuous$females)),
arboreal = as.integer(dstan_continuous$Strata_Wilman=="Ar"),
species = as.integer(as.factor(dstan_continuous$corrected_species_id))
)
dat_list_continuous_phylogenetic <- list(
N_spp=nrow(dstan_continuous),
caninessd = standardize((dstan_continuous$CanineDimorphism)),
females = standardize(dstan_continuous$females),
arboreal = as.integer(dstan_continuous$Strata_Wilman=="Ar"),
species = as.integer(as.factor(dstan_continuous$corrected_species_id))
)
newDmat<-(matrix(ncol=nrow(dstan_continuous),nrow=nrow(dstan_continuous)))
colnames(newDmat)<-dstan_continuous$corrected_species_id
rownames(newDmat)<-dstan_continuous$corrected_species_id
for(i in 1:nrow(newDmat)){
for(j in 1:ncol(newDmat)){
newDmat[i,j]<-Dmat[ rownames(Dmat)==rownames(newDmat)[i],colnames(Dmat)==colnames(newDmat)[j] ]
}
}
dat_list_continuous_phylogenetic$Dmat<-newDmat/max(newDmat)
m_continuous_continuous_phylogenetic <- ulam(
alist(
caninessd ~ multi_normal(mu,SIGMA),
mu <- a + b*females + c*arboreal,
matrix[N_spp,N_spp]: SIGMA <- cov_GPL1( Dmat, etasq, rhosq, 0.01),
## adaptive priors
a~normal(0,1),
b~normal(0,1),
c~normal(0,1),
etasq~half_normal(1,0.25),
rhosq~half_normal(3,0.25)
) , data=dat_list_continuous_phylogenetic , chains=4 , cores=4 , cmdstan=T)
precis(m_continuous_continuous_phylogenetic,depth=2)
8255*20%
8255*0.2
8255*0.22
960*0.22
citation()
1000000/20000
1000000
library(ape)
library(geiger)
library(geiger)
library(phytools)
library(rethinking)
library(dplyr)
library(phytools)
library(rethinking)
library(dplyr)
library(cmdstanr)
library(btw)
# Keep this script file in the same folder as the three input files (population data, species variables, phylogeny)
# This command will then tell R where to find these input files
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("AnalysisCode/FemaleDominance_LoadData.r")
boxplot(combined$perc_won_females~combined$sexbias_dispersal)
combined[combined$sexbias_dispersal %in% "Female",]$corrected_species_id
combined[combined$sexbias_dispersal %in% "Female",]$MatSysPMK
combined[combined$sexbias_dispersal %in% "Female",]$SexualDimorphism_MaleWeight_over_FemaleWeight
exp(combined[combined$sexbias_dispersal %in% "Female",]$SexualDimorphism_MaleWeight_over_FemaleWeight)
exp(combined[combined$sexbias_dispersal %in% "Female",]$females)
setwd("/Users/dieterlukas/Nextcloud/Documents/Behavioural similarity humans other mammals birds")
mammalcomplete<-read.csv("R_Input_MammalianSociality_MasterSheet_Sept2017.csv")
head(mammalcomplete)
tenuredata<-select(mammalcomplete,tenure)
?select
tenuredata<-select(mammalcomplete,updatedtenureinibi)
tenuredata<-select(mammalcomplete,animal,updatedtenureinibi)
colnames(tenuredata)<-c("corrected_species_id","maletenure")
combinedtenure<-left_join(combined,tenuredata,by="corrected_species_id")
head(combinedtenure)
plot(combinedtenure$perc_won_females~combinedtenure$maletenure)
summary(lm(combinedtenure$perc_won_females~combinedtenure$maletenure))
boxplot(combinedtenure$maletenure~combined$sexbias_dispersal)
boxplot(combinedtenure$maletenure~combined$strictfdom)
boxplot(combinedtenure$perc_won_females~combined$sexbias_dispersal)
boxplot(combinedtenure$maletenure~combined$sexbias_dispersal)
boxplot(combinedtenure$maletenure~combined$strictfdom)
combined %>% group_by(strictfdom,sexbias_dispersal) %>% summarise(n())
combined %>% group_by(female_evictions,sexbias_dispersal) %>% summarise(n())
combined[combined$strictfdom ==2 & combined$sexbias_dispersal=="Female",]
combined[combined$strictfdom ==2 & combined$sexbias_dispersal=="Female",]$corrected_species_id
combined[combined$strictfdom ==1 & combined$sexbias_dispersal=="Female",]$corrected_species_id
combined[combined$strictfdom ==3 & combined$sexbias_dispersal=="Female",]$corrected_species_id
combined[combined$strictfdom ==1 & combined$sexbias_dispersal=="Both",]$corrected_species_id
combined[combined$corrected_species_id=="Lemur_catta",]$strictfdom
# Keep this script file in the same folder as the three input files (population data, species variables, phylogeny)
# This command will then tell R where to find these input files
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("AnalysisCode/FemaleDominance_LoadData.r")
head(combined)
specieslevelpredictors
fissionfusion<-c("No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"Yes",
"No",
"No",
"Yes",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"Yes",
"Yes",
"Yes",
"Yes",
"Yes",
"No",
"No",
"Yes",
"Yes",
"Yes",
"Yes",
"Yes",
"Yes",
"Yes",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"Yes",
"Yes",
"Yes",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"Yes",
"No",
"Yes",
"No",
"No",
"No",
"No",
"No",
"Yes",
"No",
"No",
"No",
"No",
"No",
"No",
"No",
"Yes",
"Yes")
fissionfusion
specieslevelpredictors
specieslevelpredictors<-read.table("data/SpeciesLevelPredictors_IntersexDominance.txt")
setwd("~/Nextcloud/Documents/GitHub/primate_power/AnalysisCode")
specieslevelpredictors<-read.table("data/SpeciesLevelPredictors_IntersexDominance.txt")
getwd()
setwd("~/Nextcloud/Documents/GitHub/primate_power/")
specieslevelpredictors<-read.table("data/SpeciesLevelPredictors_IntersexDominance.txt")
specieslevelpredictors$fissionfusion<-fissionfusion
head(specieslevelpredictors)
write.csv(specieslevelpredictors,"data/SpeciesLevelPredictors_IntersexDominance.txt")
write.txt(specieslevelpredictors,"data/SpeciesLevelPredictors_IntersexDominance.txt")
write(specieslevelpredictors,"data/SpeciesLevelPredictors_IntersexDominance.txt")
write.csv(specieslevelpredictors,"data/SpeciesLevelPredictors_IntersexDominance.txt")
write.csv(specieslevelpredictors,"data/SpeciesLevelPredictors_IntersexDominance.csv")
write.csv(specieslevelpredictors,"data/SpeciesLevelPredictors_IntersexDominance.txt",sep=" ")
?write.csv
write.csv(specieslevelpredictors,"data/SpeciesLevelPredictors_IntersexDominance.txt",quote=F)
# We load the species-level predictor variables
specieslevelpredictors<-read.table("data/SpeciesLevelPredictors_IntersexDominance.txt")
head(specieslevelpredictors)
head(specieslevelpredictors)
# We load the species-level predictor variables
specieslevelpredictors<-read.table("data/SpeciesLevelPredictors_IntersexDominance.txt")
head(specieslevelpredictors)
